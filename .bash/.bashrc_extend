alias gc='git commit'
alias gs='git status'
alias glt='git describe --tags --abbrev=0'
alias gch='git diff $(git merge-base HEAD $(le_git_main))'

alias rsrc='source ~/.bashrc && source ~/.bash/.bashrc_extend'

alias vimrc='vim ~/.vimrc'
alias vimswp='cd ~/.vim/swap'

alias t="TERM=xterm-256color nimike && tmux"
alias ts='tmux list-sessions'
alias ta='tmux attach -t'

alias todo="title TODO && vim -O2 ~/docs/TODO_2024.md ~/docs/DONE.md"

alias settings="vim /c/Users/dxa/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json"

alias srv="(cd /home/dxa/algee/sandbox/srvr && clear && make)"

alias plantuml="java -jar ~/java/plantuml-1.2023.13.jar"

alias auth_snatch="yq '.contexts[.current-context].headers.Authorization' ~/.qlik/contexts.yml"

alias upgo="sudo rm -rf /usr/local/rm && curl -s https://dl.google.com/go/go1.22.6.linux-amd64.tar.gz | sudo tar -C /usr/local -xzf -"

complete -o default -F _ts ta
_ts() {
  comp=$(tmux ls | cut -d ':' -f 1)
  for c in $comp; do
    COMPREPLY+=("$c")
  done
}

abs() {
  echo $(pwd)/$@
}

complete -o default -F _pkg_js_scripts yarn
complete -o default -F _pkg_js_scripts pnpm
complete -o default -F _pkg_js_scripts npm run

_pkg_js_scripts() {
  if ! [[ -f package.json ]]; then
    return
  fi
  comp=$(jq -r '.scripts | keys | .[]' package.json | grep "^$2")
  for c in $comp; do
    COMPREPLY+=("$c")
  done
}

# title in finnish
nimike() {
  title $(basename $(pwd))
}

changes() {
  if [[ -z $1 ]]; then
    echo "changes <git-rev>"
    return 1
  fi
  git log --oneline $1..HEAD
}

what() {
  which $1 || alias | grep --color=never "alias $1=" || type $1 2> /dev/null || echo "$1 not found"
}


# WSL title-change
title() {
  echo Setting title: "$1"
  echo -ne '\033]0;'"$1"'\a'
}

# funny name to avoid name-space collision
le_git_main() {
  git symbolic-ref refs/remotes/origin/HEAD | grep -o "\w\+$"
}

gu() {
  git checkout $(le_git_main) && git pull && prune
}

source ~/hax/glone/glone.sh

srch() {
  history | grep $1 | vim -
}

for s in $(ls ~/.bash/*.sh); do
  source $s
done


dsh() {
  docker exec -it $1 sh
}

_dsh() {
  for c in $(docker ps -q); do
    COMPREPLY+=("$c")
  done
}

complete -o default -F _dsh dsh


alias p='python'

# Punch related alias
alias wt='workingtime'

eval $(ssh-agent -s) > /dev/null

# Accept EULA for running qlik dockers
export ACCEPT_EULA=yes

#Gogogogo things
export GOPATH="$HOME/go"
export GOROOT="/usr/local/go"

if [ -d "$GOROOT/bin" ] ; then
    PATH="$GOROOT/bin:$PATH"
fi

if [ -d "$GOPATH/bin" ] ; then
    PATH="$GOPATH/bin:$PATH"
fi

if [ -d "$HOME/py/bin" ]; then
  PATH="$PATH:$HOME/py/bin"
fi

if [ -d "/home/dxa/.nvm/versions/node/v16.20.0/bin" ]; then
  PATH="/home/dxa/.nvm/versions/node/v16.20.0/bin":$PATH
fi

if [ $(which kubectl) ]; then
  . <(kubectl completion bash)
fi

if [ $(which helm) ]; then
  . <(helm completion bash)
fi

if [ $(which qlik) ]; then
  . <(qlik completion bash)
fi

if [ $(which telepresence) ]; then
  . <(telepresence completion bash)
fi

# Since it seems I have to run docker
# from windows:
alias gsh='/c/Program\ Files/Git/git-bash.exe &'

wrun() {
  local pid
  echo $@ >> queue.sh
  gsh
  pid=$!
  wait $pid
  rm queue.sh
}

alias whome='cd /c/Users/dxa/'
alias janson='python -i ~/toolkit/janson.py'
alias deps='python3.7 -i ~/toolkit/deps.py'

alias server='python3 -m SimpleHTTPServer'

export HISTCONTROL=ignorespace
alias firefox="/c/Program\ Files\ \(x86\)/Mozilla\ Firefox/firefox.exe"
export HELM_EXPERIMENTAL_OCI=1
export GITHUB_USER=glooms
export GITHUB_TOKEN=$(cat ~/.github/token)

if [[ -d $HOME/.istioctl/bin ]]; then
  export PATH=$HOME/.istioctl/bin:$PATH
fi
